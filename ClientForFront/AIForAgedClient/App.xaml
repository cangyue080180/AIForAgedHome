<Application x:Class="AIForAgedClient.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:AIForAgedClient"
             xmlns:v="clr-namespace:AIForAgedClient.View"
             xmlns:vm="clr-namespace:AIForAgedClient.ViewModel"
             StartupUri="View/NewMainWindow.xaml"
             d1p1:Ignorable="d">
    <Application.Resources>
        <ResourceDictionary>
            <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" xmlns:vm="clr-namespace:AIForAgedClient.ViewModel" />
            <SolidColorBrush x:Key="mycolor" Color="#FF5FE6E2" />
            <DataTemplate DataType="{x:Type vm:BaseFourVideoVM}">
                <v:FourVideoControl />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:PoseInfoesVM}">
                <v:PoseInfoesView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:DataManagerVM}">
                <v:Manage />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:RoomInfoDatasVM}">
                <v:RoomInfoDatasView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:AgesInfoDatasVM}">
                <v:AgesInfoDatasView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ServerInfoDatasVM}">
                <v:ServerInfoDatasView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:CameraInfoDatasVM}">
                <v:CameraInfoDatasView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:ChartViewVM}">
                <v:ChartView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type vm:RiChangGuanLiVM}">
                <v:RiChangGuanLi />
            </DataTemplate>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel LastChildFill="True">
                                <TextBlock DockPanel.Dock="Bottom" Foreground="Red" FontSize="10"
                             Text="{Binding ElementName=adornerPlaceholder,Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
                                <Border BorderBrush="Green" BorderThickness="1">
                                    <AdornedElementPlaceholder Name="adornerPlaceholder"></AdornedElementPlaceholder>
                                </Border>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type StackPanel}" x:Key="text_stackpanel">
                <Setter Property="Margin" Value="0,10,0,0" />
            </Style>
            <Style TargetType="Button" x:Key="toolBtn">
                <Setter Property="MinWidth" Value="70" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <!--<Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" CornerRadius="5" Background="White" TextBlock.Foreground="#FF00E8FF">
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>-->
            </Style>
            <ControlTemplate TargetType="CheckBox" x:Key="baoJing">
                <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" />
                <ControlTemplate.Triggers>
                    <Trigger Property="CheckBox.IsChecked" Value="true">
                        <Trigger.EnterActions>
                            <BeginStoryboard x:Name="shansuo">
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.2" Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="Forever" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <RemoveStoryboard BeginStoryboardName="shansuo" />
                        </Trigger.ExitActions>
                    </Trigger>
                    <Trigger Property="CheckBox.IsChecked" Value="false">
                        <Setter Property="Opacity" Value="0" />
                    </Trigger>
                    <Trigger Property="CheckBox.IsChecked" Value="{x:Null}">
                        <Setter Property="Opacity" Value="0" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <local:StatusConverter x:Key="statusConverter" />
            <local:SecondsTimeConverter x:Key="secondsTimeConverter" />
            <local:StatusColorConverter x:Key="statusColorConverter" />
        </ResourceDictionary>
    </Application.Resources>
</Application>